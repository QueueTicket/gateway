name: Gateway Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2                         # AWS Region, 예: ap-northeast-2 (오타 수정)
  ECS_SERVICE: queueticket-gateway-app                 # ECS 서비스 이름
  ECS_CLUSTER: qticket-cluster                        # ECS 클러스터 이름
  ECS_TASK_DEFINITION: gateway_task_definition.json    # ECS Task Definition 경로 (.json 파일)
  CONTAINER_NAME: gateway-app                          # Task Definition에서의 컨테이너 이름
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/gateway        # Docker Hub 이미지 이름
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials   # AWS 자격증명 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up JDK 17   # Jib을 사용하려면 JDK 필요
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Grant execute permission for gradlew   # gradlew 파일에 실행 권한 부여
      run: chmod +x ./gradlew

    - name: Log in to Docker Hub   # Docker Hub 로그인
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image with Jib   # Jib으로 이미지 빌드 및 푸시
      run: ./gradlew jib --image=${{ env.DOCKER_IMAGE }}:latest

    - name: Update ECS Task Definition with new image   # ECS Task Definition 업데이트
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.DOCKER_IMAGE }}:latest

    - name: Deploy updated ECS Task Definition   # 업데이트된 Task Definition을 사용하여 ECS 서비스 배포
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
