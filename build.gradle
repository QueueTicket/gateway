plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'maven-publish'
}

group = 'com.qticket'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

	maven {
		url = uri("https://maven.pkg.github.com/QueueTicket/common")
		credentials {
			username = System.getenv("GITHUB_USERNAME")
			password = System.getenv("GITHUB_TOKEN")
		}
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'com.qticket:common:0.0.12'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
